{"ast":null,"code":"import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios'; // The file name starts with lowercase \n\nclass BookStore {\n  // proprty in lowercase\n  constructor() {\n    this.Books = Books;\n    this.isLoading = false;\n\n    this.deletebook = bookname => {\n      const updateBooks = this.Books.filter(book => book.name !== bookname);\n      return this.Books = updateBooks;\n    };\n\n    this.getBooks = () => {\n      this.Books = Books;\n    };\n\n    this.createbook = newBook => {\n      newBook.length = this.Books.length + 1;\n      newBook.slug = slugify(newBook.name);\n      this.Books.push(newBook);\n    };\n\n    this.fetchBooks = () => {\n      const response = axios.get(\"https://localhost:8000/movies\");\n      console.log(response);\n    };\n\n    makeAutoObservable(this);\n  } // use the id here instead of name\n\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\nbookStore.getBooks();\nexport default bookStore;","map":{"version":3,"sources":["/Users/engineermaha/Developement/JSFoundations-Git/BookStore/bookstore/src/components/stores/BookStore.js"],"names":["Books","makeAutoObservable","slugify","axios","BookStore","constructor","isLoading","deletebook","bookname","updateBooks","filter","book","name","getBooks","createbook","newBook","length","slug","push","fetchBooks","response","get","console","log","bookStore"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,kBAAT,QAAmC,MAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,SAAN,CAAgB;AAEZ;AAKAC,EAAAA,WAAW,GAAG;AAAA,SAHdL,KAGc,GAHNA,KAGM;AAAA,SAFdM,SAEc,GAFF,KAEE;;AAAA,SAKdC,UALc,GAKAC,QAAD,IAAc;AACvB,YAAMC,WAAW,GAAG,KAAKT,KAAL,CAAWU,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcJ,QAA1C,CAApB;AACA,aAAO,KAAKR,KAAL,GAAaS,WAApB;AAEH,KATa;;AAAA,SAYdI,QAZc,GAYH,MAAM;AAEb,WAAKb,KAAL,GAAaA,KAAb;AACH,KAfa;;AAAA,SAiBdc,UAjBc,GAiBAC,OAAD,IAAa;AACtBA,MAAAA,OAAO,CAACC,MAAR,GAAiB,KAAKhB,KAAL,CAAWgB,MAAX,GAAoB,CAArC;AACAD,MAAAA,OAAO,CAACE,IAAR,GAAef,OAAO,CAACa,OAAO,CAACH,IAAT,CAAtB;AACA,WAAKZ,KAAL,CAAWkB,IAAX,CAAgBH,OAAhB;AACH,KArBa;;AAAA,SAuBdI,UAvBc,GAuBD,MAAM;AACf,YAAMC,QAAQ,GAAGjB,KAAK,CAACkB,GAAN,CAAU,+BAAV,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH,KA1Ba;;AACVnB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GATW,CAWZ;;;AAXY;;AAqChB,MAAMuB,SAAS,GAAG,IAAIpB,SAAJ,EAAlB;AACAoB,SAAS,CAACL,UAAV;AAEAK,SAAS,CAACX,QAAV;AAEA,eAAeW,SAAf","sourcesContent":["import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios';\n\n\n// The file name starts with lowercase \nclass BookStore {\n\n    // proprty in lowercase\n\n    Books = Books;\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    // use the id here instead of name\n    deletebook = (bookname) => {\n        const updateBooks = this.Books.filter((book) => book.name !== bookname);\n        return this.Books = updateBooks;\n\n    };\n\n\n    getBooks = () => {\n\n        this.Books = Books;\n    };\n\n    createbook = (newBook) => {\n        newBook.length = this.Books.length + 1;\n        newBook.slug = slugify(newBook.name);\n        this.Books.push(newBook);\n    };\n\n    fetchBooks = () => {\n        const response = axios.get(\"https://localhost:8000/movies\");\n        console.log(response);\n    }\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\n\nbookStore.getBooks();\n\nexport default bookStore;"]},"metadata":{},"sourceType":"module"}