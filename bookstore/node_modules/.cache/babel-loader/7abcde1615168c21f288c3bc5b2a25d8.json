{"ast":null,"code":"import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios'; // The file name starts with lowercase \n\nclass BookStore {\n  // proprty in lowercase\n  constructor() {\n    this.Books = [];\n    this.isLoading = false;\n\n    this.deletebook = async bookName => {\n      // const updateBooks = this.Books.filter((book) => book.name !== bookname);\n      // return this.Books = updateBooks;\n      try {\n        await axios.delete(`http://localhost:8000/Books/${bookName}`);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getBooks = () => {\n      this.Books = Books;\n    };\n\n    this.createbook = newBook => {\n      newBook.length = this.Books.length + 1;\n      newBook.slug = slugify(newBook.name);\n      this.Books.push(newBook);\n    };\n\n    this.fetchBooks = async () => {\n      try {\n        const response = axios.get(\"http://localhost:8000/Books\");\n        this.Books = (await response).data;\n      } catch (error) {\n        console.error(\"fetchMovies:\", error);\n      }\n    };\n\n    makeAutoObservable(this);\n  } // use the id here instead of name\n\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\nbookStore.getBooks();\nexport default bookStore;","map":{"version":3,"sources":["/Users/engineermaha/Developement/JSFoundations-Git/BookStore/bookstore/src/components/stores/BookStore.js"],"names":["Books","makeAutoObservable","slugify","axios","BookStore","constructor","isLoading","deletebook","bookName","delete","error","console","log","getBooks","createbook","newBook","length","slug","name","push","fetchBooks","response","get","data","bookStore"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,kBAAT,QAAmC,MAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,SAAN,CAAgB;AAEZ;AAKAC,EAAAA,WAAW,GAAG;AAAA,SAHdL,KAGc,GAHN,EAGM;AAAA,SAFdM,SAEc,GAFF,KAEE;;AAAA,SAKdC,UALc,GAKD,MAAOC,QAAP,IAAoB;AAC7B;AACA;AACA,UAAI;AACA,cAAML,KAAK,CAACM,MAAN,CAAc,+BAA8BD,QAAS,EAArD,CAAN;AACH,OAFD,CAEE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAba;;AAAA,SAgBdG,QAhBc,GAgBH,MAAM;AAEb,WAAKb,KAAL,GAAaA,KAAb;AACH,KAnBa;;AAAA,SAqBdc,UArBc,GAqBAC,OAAD,IAAa;AACtBA,MAAAA,OAAO,CAACC,MAAR,GAAiB,KAAKhB,KAAL,CAAWgB,MAAX,GAAoB,CAArC;AACAD,MAAAA,OAAO,CAACE,IAAR,GAAef,OAAO,CAACa,OAAO,CAACG,IAAT,CAAtB;AACA,WAAKlB,KAAL,CAAWmB,IAAX,CAAgBJ,OAAhB;AACH,KAzBa;;AAAA,SA2BdK,UA3Bc,GA2BD,YAAY;AACrB,UAAI;AACA,cAAMC,QAAQ,GAAGlB,KAAK,CAACmB,GAAN,CAAU,6BAAV,CAAjB;AACA,aAAKtB,KAAL,GAAa,CAAC,MAAMqB,QAAP,EAAiBE,IAA9B;AACH,OAHD,CAGE,OAAOb,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH;AAEJ,KAnCa;;AACVT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GATW,CAWZ;;;AAXY;;AA8ChB,MAAMuB,SAAS,GAAG,IAAIpB,SAAJ,EAAlB;AACAoB,SAAS,CAACJ,UAAV;AAEAI,SAAS,CAACX,QAAV;AAEA,eAAeW,SAAf","sourcesContent":["import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios';\n\n\n// The file name starts with lowercase \nclass BookStore {\n\n    // proprty in lowercase\n\n    Books = [];\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    // use the id here instead of name\n    deletebook = async (bookName) => {\n        // const updateBooks = this.Books.filter((book) => book.name !== bookname);\n        // return this.Books = updateBooks;\n        try {\n            await axios.delete(`http://localhost:8000/Books/${bookName}`);\n        } catch (error) {\n            console.log(error)\n        }\n    };\n\n\n    getBooks = () => {\n\n        this.Books = Books;\n    };\n\n    createbook = (newBook) => {\n        newBook.length = this.Books.length + 1;\n        newBook.slug = slugify(newBook.name);\n        this.Books.push(newBook);\n    };\n\n    fetchBooks = async () => {\n        try {\n            const response = axios.get(\"http://localhost:8000/Books\");\n            this.Books = (await response).data;\n        } catch (error) {\n            console.error(\"fetchMovies:\", error)\n        }\n\n    }\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\n\nbookStore.getBooks();\n\nexport default bookStore;"]},"metadata":{},"sourceType":"module"}