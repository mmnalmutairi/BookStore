{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport instance from \"./instance\";\nimport decode from \"jwt-decode\"; // The file name starts with lowercase \n\nclass UserStore {\n  constructor() {\n    this.user = null;\n\n    this.signup = async newUser => {\n      try {\n        const res = await instance.post(\"/signup\", newUser);\n        this.setUser(res.data.token);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.signin = async userData => {\n      try {\n        const res = await instance.post(\"/signin\", userData);\n        this.setUser(res.data.token);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.setUser = token => {\n      instance.defaults.headers.common.Authorization = `Bearer ${token}`;\n      this.user = decode(token);\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst userStore = new UserStore();\nexport default userStore;","map":{"version":3,"sources":["/Users/engineermaha/Developement/JSFoundations-Git/BookStore/bookstore/src/components/stores/authStore.js"],"names":["makeAutoObservable","instance","decode","UserStore","constructor","user","signup","newUser","res","post","setUser","data","token","error","console","signin","userData","defaults","headers","common","Authorization","userStore"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB,C,CAEA;;AACA,MAAMC,SAAN,CAAgB;AAIZC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc,GAFP,IAEO;;AAAA,SAIdC,MAJc,GAIL,MAAOC,OAAP,IAAmB;AACxB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAT,CAAc,SAAd,EAAyBF,OAAzB,CAAlB;AACA,aAAKG,OAAL,CAAaF,GAAG,CAACG,IAAJ,CAASC,KAAtB;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,KAZa;;AAAA,SAcdE,MAdc,GAcL,MAAOC,QAAP,IAAoB;AACzB,UAAI;AACA,cAAMR,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAT,CAAc,SAAd,EAAyBO,QAAzB,CAAlB;AACA,aAAKN,OAAL,CAAaF,GAAG,CAACG,IAAJ,CAASC,KAAtB;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,KAtBa;;AAAA,SAwBdH,OAxBc,GAwBHE,KAAD,IAAW;AAEjBX,MAAAA,QAAQ,CAACgB,QAAT,CAAkBC,OAAlB,CAA0BC,MAA1B,CAAiCC,aAAjC,GAAkD,UAASR,KAAM,EAAjE;AACA,WAAKP,IAAL,GAAYH,MAAM,CAACU,KAAD,CAAlB;AACH,KA5Ba;;AACVZ,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AANW;;AAoChB,MAAMqB,SAAS,GAAG,IAAIlB,SAAJ,EAAlB;AAEA,eAAekB,SAAf","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport instance from \"./instance\";\nimport decode from \"jwt-decode\";\n\n// The file name starts with lowercase \nclass UserStore {\n\n    user = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    signup = async (newUser) => {\n        try {\n            const res = await instance.post(\"/signup\", newUser);\n            this.setUser(res.data.token);\n        } catch (error) {\n            console.error(error);\n        }\n\n    };\n\n    signin = async (userData) => {\n        try {\n            const res = await instance.post(\"/signin\", userData);\n            this.setUser(res.data.token);\n        } catch (error) {\n            console.error(error);\n        }\n\n    };\n\n    setUser = (token) => {\n\n        instance.defaults.headers.common.Authorization = `Bearer ${token}`;\n        this.user = decode(token);\n    }\n\n}\n\nconst userStore = new UserStore();\n\nexport default userStore;"]},"metadata":{},"sourceType":"module"}