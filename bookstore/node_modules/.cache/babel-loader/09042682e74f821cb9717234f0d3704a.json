{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport instance from \"./instance\"; // The file name starts with lowercase \n\nclass UserStore {\n  constructor() {\n    this.user = null;\n\n    this.signup = async newUser => {\n      try {\n        await instance.post(\"/signup\", newUser);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.signin = async userData => {\n      try {\n        const res = await instance.post(\"/signin\", userData);\n        this.user = res.data;\n        console.log(this.user);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    makeAutoObservable(this);\n  }\n\n}\n\nconst userStore = new UserStore();\nexport default userStore;","map":{"version":3,"sources":["/Users/engineermaha/Developement/JSFoundations-Git/BookStore/bookstore/src/components/stores/authStore.js"],"names":["makeAutoObservable","instance","UserStore","constructor","user","signup","newUser","post","error","console","signin","userData","res","data","log","userStore"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;AACA,MAAMC,SAAN,CAAgB;AAIZC,EAAAA,WAAW,GAAG;AAAA,SAFdC,IAEc,GAFP,IAEO;;AAAA,SAIdC,MAJc,GAIL,MAAOC,OAAP,IAAmB;AACxB,UAAI;AACA,cAAML,QAAQ,CAACM,IAAT,CAAc,SAAd,EAAyBD,OAAzB,CAAN;AACH,OAFD,CAEE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,KAXa;;AAAA,SAadE,MAbc,GAaL,MAAOC,QAAP,IAAoB;AACzB,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACM,IAAT,CAAc,SAAd,EAAyBI,QAAzB,CAAlB;AACA,aAAKP,IAAL,GAAYQ,GAAG,CAACC,IAAhB;AACAJ,QAAAA,OAAO,CAACK,GAAR,CAAY,KAAKV,IAAjB;AACH,OAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,KAtBa;;AACVR,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AANW;;AA8BhB,MAAMe,SAAS,GAAG,IAAIb,SAAJ,EAAlB;AAEA,eAAea,SAAf","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport instance from \"./instance\";\n\n\n// The file name starts with lowercase \nclass UserStore {\n\n    user = null;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    signup = async (newUser) => {\n        try {\n            await instance.post(\"/signup\", newUser);\n        } catch (error) {\n            console.error(error);\n        }\n\n    };\n\n    signin = async (userData) => {\n        try {\n            const res = await instance.post(\"/signin\", userData);\n            this.user = res.data;\n            console.log(this.user);\n        } catch (error) {\n            console.error(error);\n        }\n\n    };\n\n}\n\nconst userStore = new UserStore();\n\nexport default userStore;"]},"metadata":{},"sourceType":"module"}