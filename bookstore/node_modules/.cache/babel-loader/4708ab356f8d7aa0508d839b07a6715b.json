{"ast":null,"code":"import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios'; // The file name starts with lowercase \n\nclass BookStore {\n  // proprty in lowercase\n  constructor() {\n    this.Books = [];\n    this.isLoading = false;\n\n    this.deletebook = async bookName => {\n      try {\n        await axios.delete(`http://localhost:8000/books/${bookName}`);\n        const updateBooks = this.Books.filter(book => book.name !== bookName);\n        this.Books = updateBooks;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.updateBook = async updatedBook => {\n      try {\n        await axios.put(`http://localhost:8000/books/${updatedBook.id}`);\n        const book = this.Books.find(book => book.id === updatedBook.id);\n        book.name = updatedBook.name;\n        book.image = updatedBook.image;\n        book.brief = updatedBook.brief;\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.getBooks = () => {\n      this.Books = Books;\n    };\n\n    this.createbook = async newBook => {\n      try {\n        const response = await axios.post(\"http://localhost:8000/books\", newBook);\n        this.Books.push(response.data);\n        console.log(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    this.fetchBooks = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/books\");\n        this.Books = response.data;\n        console.log(response.data);\n      } catch (error) {\n        console.error(\"fetchMovies:\", error);\n      }\n    };\n\n    makeAutoObservable(this);\n  } // use the id here instead of name\n\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\nbookStore.getBooks();\nexport default bookStore;","map":{"version":3,"sources":["/Users/engineermaha/Developement/JSFoundations-Git/BookStore/bookstore/src/components/stores/BookStore.js"],"names":["Books","makeAutoObservable","slugify","axios","BookStore","constructor","isLoading","deletebook","bookName","delete","updateBooks","filter","book","name","error","console","log","updateBook","updatedBook","put","id","find","image","brief","getBooks","createbook","newBook","response","post","push","data","fetchBooks","get","bookStore"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,kBAAT,QAAmC,MAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACA,MAAMC,SAAN,CAAgB;AAEZ;AAKAC,EAAAA,WAAW,GAAG;AAAA,SAHdL,KAGc,GAHN,EAGM;AAAA,SAFdM,SAEc,GAFF,KAEE;;AAAA,SAKdC,UALc,GAKD,MAAOC,QAAP,IAAoB;AAC7B,UAAI;AACA,cAAML,KAAK,CAACM,MAAN,CAAc,+BAA8BD,QAAS,EAArD,CAAN;AACA,cAAME,WAAW,GAAG,KAAKV,KAAL,CAAWW,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcL,QAA1C,CAApB;AACA,aAAKR,KAAL,GAAaU,WAAb;AACH,OAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,KAba;;AAAA,SAedG,UAfc,GAeD,MAAOC,WAAP,IAAuB;AAChC,UAAI;AACA,cAAMf,KAAK,CAACgB,GAAN,CAAW,+BAA8BD,WAAW,CAACE,EAAG,EAAxD,CAAN;AACA,cAAMR,IAAI,GAAG,KAAKZ,KAAL,CAAWqB,IAAX,CAAiBT,IAAD,IAAUA,IAAI,CAACQ,EAAL,KAAYF,WAAW,CAACE,EAAlD,CAAb;AACAR,QAAAA,IAAI,CAACC,IAAL,GAAYK,WAAW,CAACL,IAAxB;AACAD,QAAAA,IAAI,CAACU,KAAL,GAAaJ,WAAW,CAACI,KAAzB;AACAV,QAAAA,IAAI,CAACW,KAAL,GAAaL,WAAW,CAACK,KAAzB;AACH,OAND,CAME,OAAOT,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,KA1Ba;;AAAA,SA4BdU,QA5Bc,GA4BH,MAAM;AAEb,WAAKxB,KAAL,GAAaA,KAAb;AACH,KA/Ba;;AAAA,SAiCdyB,UAjCc,GAiCD,MAAOC,OAAP,IAAmB;AAE5B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAN,CAAW,6BAAX,EAA0CF,OAA1C,CAAvB;AACA,aAAK1B,KAAL,CAAW6B,IAAX,CAAgBF,QAAQ,CAACG,IAAzB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACH,OAJD,CAIE,OAAOb,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AAEJ,KA3Ca;;AAAA,SA6CdiB,UA7Cc,GA6CD,YAAY;AACrB,UAAI;AACA,cAAMJ,QAAQ,GAAG,MAAMxB,KAAK,CAAC6B,GAAN,CAAU,6BAAV,CAAvB;AACA,aAAKhC,KAAL,GAAc2B,QAAD,CAAWG,IAAxB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACG,IAArB;AACH,OAJD,CAIE,OAAOhB,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,cAAd,EAA8BA,KAA9B;AACH;AAEJ,KAtDa;;AACVb,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GATW,CAWZ;;;AAXY;;AAmEhB,MAAMgC,SAAS,GAAG,IAAI7B,SAAJ,EAAlB;AACA6B,SAAS,CAACF,UAAV;AACAE,SAAS,CAACT,QAAV;AAEA,eAAeS,SAAf","sourcesContent":["import Books from \"../../Books\";\nimport { makeAutoObservable } from 'mobx';\nimport slugify from 'react-slugify';\nimport axios from 'axios';\n\n\n// The file name starts with lowercase \nclass BookStore {\n\n    // proprty in lowercase\n\n    Books = [];\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    // use the id here instead of name\n    deletebook = async (bookName) => {\n        try {\n            await axios.delete(`http://localhost:8000/books/${bookName}`);\n            const updateBooks = this.Books.filter((book) => book.name !== bookName);\n            this.Books = updateBooks;\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    updateBook = async (updatedBook) => {\n        try {\n            await axios.put(`http://localhost:8000/books/${updatedBook.id}`);\n            const book = this.Books.find((book) => book.id === updatedBook.id);\n            book.name = updatedBook.name;\n            book.image = updatedBook.image;\n            book.brief = updatedBook.brief;\n        } catch (error) {\n            console.log(error);\n        }\n\n    };\n\n    getBooks = () => {\n\n        this.Books = Books;\n    };\n\n    createbook = async (newBook) => {\n\n        try {\n            const response = await axios.post(\"http://localhost:8000/books\", newBook);\n            this.Books.push(response.data);\n            console.log(response);\n        } catch (error) {\n            console.error(error);\n        }\n\n    };\n\n    fetchBooks = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8000/books\");\n            this.Books = (response).data;\n            console.log(response.data);\n        } catch (error) {\n            console.error(\"fetchMovies:\", error)\n        }\n\n    }\n\n\n\n}\n\nconst bookStore = new BookStore();\nbookStore.fetchBooks();\nbookStore.getBooks();\n\nexport default bookStore;"]},"metadata":{},"sourceType":"module"}